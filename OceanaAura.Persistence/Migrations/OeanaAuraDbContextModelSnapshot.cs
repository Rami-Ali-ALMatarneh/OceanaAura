// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OceanaAura.Persistence.AppDbContext;

#nullable disable

namespace OceanaAura.Persistence.Migrations
{
    [DbContext(typeof(OeanaAuraDbContext))]
    partial class OeanaAuraDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OceanaAura.Domain.Entities.AdditionalProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LookUpId")
                        .HasColumnType("int");

                    b.Property<string>("ModifyBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifyOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PriceJOR")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceUAE")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceUSD")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("LookUpId");

                    b.ToTable("additionalProducts");
                });

            modelBuilder.Entity("OceanaAura.Domain.Entities.BottleImg", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<string>("ImgUrlBack")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgUrlFront")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LidId")
                        .HasColumnType("int");

                    b.Property<int>("SizeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("bottleImgs");
                });

            modelBuilder.Entity("OceanaAura.Domain.Entities.Cart", b =>
                {
                    b.Property<int>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CartId"));

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CustomizationFees")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FontFamily")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCustomize")
                        .HasColumnType("bit");

                    b.Property<int?>("LidId")
                        .HasColumnType("int");

                    b.Property<string>("LidName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("LidPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("PaymentId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("ProductPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("Shipping")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SizeId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CartId");

                    b.HasIndex("OrderId");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("OceanaAura.Domain.Entities.ContactUs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SubmittedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ContactUs");
                });

            modelBuilder.Entity("OceanaAura.Domain.Entities.Feedback", b =>
                {
                    b.Property<int>("FeedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeedbackId"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsShow")
                        .HasColumnType("bit");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime>("SubmittedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("FeedbackId");

                    b.HasIndex("ProductId");

                    b.ToTable("feedbacks");
                });

            modelBuilder.Entity("OceanaAura.Domain.Entities.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifyBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifyOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("OceanaAura.Domain.Entities.Invoice", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceId"));

                    b.Property<DateTime>("CreateOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.HasKey("InvoiceId");

                    b.HasIndex("OrderId");

                    b.ToTable("invoices");
                });

            modelBuilder.Entity("OceanaAura.Domain.Entities.LookUp.LookUpCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifyBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifyOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("lookUpCategories");

                    b.HasData(
                        new
                        {
                            CategoryId = 10,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 1, 22, 15, 24, 53, 618, DateTimeKind.Local).AddTicks(3968),
                            Description = "MagneticLid",
                            Id = 0,
                            IsDeleted = false,
                            NameAr = "غطاء مغناطيسي",
                            NameEn = "Magnetic Lid"
                        },
                        new
                        {
                            CategoryId = 1,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 1, 22, 15, 24, 53, 618, DateTimeKind.Local).AddTicks(3985),
                            Description = "Region Country",
                            Id = 0,
                            IsDeleted = false,
                            NameAr = "المنطقة",
                            NameEn = "Region"
                        },
                        new
                        {
                            CategoryId = 2,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 1, 22, 15, 24, 53, 618, DateTimeKind.Local).AddTicks(3987),
                            Description = "Payment",
                            Id = 0,
                            IsDeleted = false,
                            NameAr = "طرق الدفع",
                            NameEn = "Payment"
                        },
                        new
                        {
                            CategoryId = 4,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 1, 22, 15, 24, 53, 618, DateTimeKind.Local).AddTicks(3989),
                            Description = "PriceCountry",
                            Id = 0,
                            IsDeleted = false,
                            NameAr = "عملة البلد",
                            NameEn = "Price Country"
                        },
                        new
                        {
                            CategoryId = 3,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 1, 22, 15, 24, 53, 618, DateTimeKind.Local).AddTicks(3990),
                            Description = "Language",
                            Id = 0,
                            IsDeleted = false,
                            NameAr = "لغة",
                            NameEn = "Language"
                        },
                        new
                        {
                            CategoryId = 5,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 1, 22, 15, 24, 53, 618, DateTimeKind.Local).AddTicks(3992),
                            Description = "Product Color",
                            Id = 0,
                            IsDeleted = false,
                            NameAr = "لون المنتج",
                            NameEn = "Product Color"
                        },
                        new
                        {
                            CategoryId = 6,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 1, 22, 15, 24, 53, 618, DateTimeKind.Local).AddTicks(3993),
                            Description = "Product Size",
                            Id = 0,
                            IsDeleted = false,
                            NameAr = "حجم المنتج",
                            NameEn = "Product Size"
                        },
                        new
                        {
                            CategoryId = 7,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 1, 22, 15, 24, 53, 618, DateTimeKind.Local).AddTicks(3995),
                            Description = "Product Additional",
                            Id = 0,
                            IsDeleted = false,
                            NameAr = "اضافات للمنتج",
                            NameEn = "Product Additional"
                        },
                        new
                        {
                            CategoryId = 8,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 1, 22, 15, 24, 53, 618, DateTimeKind.Local).AddTicks(3996),
                            Description = "Order Status",
                            Id = 0,
                            IsDeleted = false,
                            NameAr = "حالات الطلب",
                            NameEn = "Order Status"
                        },
                        new
                        {
                            CategoryId = 9,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 1, 22, 15, 24, 53, 618, DateTimeKind.Local).AddTicks(3998),
                            Description = "Product Category",
                            Id = 0,
                            IsDeleted = false,
                            NameAr = "نوع المنتج",
                            NameEn = "Product Category"
                        });
                });

            modelBuilder.Entity("OceanaAura.Domain.Entities.LookUp.LookUpEntity", b =>
                {
                    b.Property<int>("LookUpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LookUpId"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSoldOut")
                        .HasColumnType("bit");

                    b.Property<int>("LookupCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ModifyBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifyOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LookUpId");

                    b.HasIndex("LookupCategoryId");

                    b.ToTable("lookups");

                    b.HasData(
                        new
                        {
                            LookUpId = 100,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 1, 22, 15, 24, 53, 618, DateTimeKind.Local).AddTicks(4104),
                            Id = 0,
                            IsDeleted = false,
                            IsSoldOut = false,
                            LookupCategoryId = 1,
                            NameAr = "الأردن",
                            NameEn = "Jordan"
                        },
                        new
                        {
                            LookUpId = 101,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 1, 22, 15, 24, 53, 618, DateTimeKind.Local).AddTicks(4107),
                            Id = 0,
                            IsDeleted = false,
                            IsSoldOut = false,
                            LookupCategoryId = 1,
                            NameAr = "الإمارات العربية المتحدة",
                            NameEn = "United Arab Emirates"
                        },
                        new
                        {
                            LookUpId = 200,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 1, 22, 15, 24, 53, 618, DateTimeKind.Local).AddTicks(4108),
                            Id = 0,
                            IsDeleted = false,
                            IsSoldOut = false,
                            LookupCategoryId = 2,
                            NameAr = "دفع كاش",
                            NameEn = "Cash On Delivery"
                        },
                        new
                        {
                            LookUpId = 400,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 1, 22, 15, 24, 53, 618, DateTimeKind.Local).AddTicks(4110),
                            Id = 0,
                            IsDeleted = false,
                            IsSoldOut = false,
                            LookupCategoryId = 4,
                            NameAr = "الأردن",
                            NameEn = "JOR"
                        },
                        new
                        {
                            LookUpId = 401,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 1, 22, 15, 24, 53, 618, DateTimeKind.Local).AddTicks(4111),
                            Id = 0,
                            IsDeleted = false,
                            IsSoldOut = false,
                            LookupCategoryId = 4,
                            NameAr = "الإمارات العربية المتحدة",
                            NameEn = "UAE"
                        },
                        new
                        {
                            LookUpId = 402,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 1, 22, 15, 24, 53, 618, DateTimeKind.Local).AddTicks(4113),
                            Id = 0,
                            IsDeleted = false,
                            IsSoldOut = false,
                            LookupCategoryId = 4,
                            NameAr = "دولار",
                            NameEn = "USD"
                        },
                        new
                        {
                            LookUpId = 300,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 1, 22, 15, 24, 53, 618, DateTimeKind.Local).AddTicks(4114),
                            Id = 0,
                            IsDeleted = false,
                            IsSoldOut = false,
                            LookupCategoryId = 3,
                            NameAr = "الأنجليزي",
                            NameEn = "En"
                        },
                        new
                        {
                            LookUpId = 301,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 1, 22, 15, 24, 53, 618, DateTimeKind.Local).AddTicks(4116),
                            Id = 0,
                            IsDeleted = false,
                            IsSoldOut = false,
                            LookupCategoryId = 3,
                            NameAr = "العربية",
                            NameEn = "Ar"
                        },
                        new
                        {
                            LookUpId = 500,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 1, 22, 15, 24, 53, 618, DateTimeKind.Local).AddTicks(4118),
                            Id = 0,
                            IsDeleted = false,
                            IsSoldOut = false,
                            LookupCategoryId = 5,
                            NameAr = "أسود",
                            NameEn = "Black"
                        },
                        new
                        {
                            LookUpId = 501,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 1, 22, 15, 24, 53, 618, DateTimeKind.Local).AddTicks(4119),
                            Id = 0,
                            IsDeleted = false,
                            IsSoldOut = false,
                            LookupCategoryId = 5,
                            NameAr = "وردي فاتح",
                            NameEn = "Light Pink"
                        },
                        new
                        {
                            LookUpId = 502,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 1, 22, 15, 24, 53, 618, DateTimeKind.Local).AddTicks(4121),
                            Id = 0,
                            IsDeleted = false,
                            IsSoldOut = false,
                            LookupCategoryId = 5,
                            NameAr = "أزرق كحلي",
                            NameEn = "Navy Blue"
                        },
                        new
                        {
                            LookUpId = 503,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 1, 22, 15, 24, 53, 618, DateTimeKind.Local).AddTicks(4122),
                            Id = 0,
                            IsDeleted = false,
                            IsSoldOut = false,
                            LookupCategoryId = 5,
                            NameAr = "أخضر عسكري",
                            NameEn = "Army Green"
                        },
                        new
                        {
                            LookUpId = 504,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 1, 22, 15, 24, 53, 618, DateTimeKind.Local).AddTicks(4124),
                            Id = 0,
                            IsDeleted = false,
                            IsSoldOut = false,
                            LookupCategoryId = 5,
                            NameAr = "أزرق فاتح",
                            NameEn = "Baby Blue"
                        },
                        new
                        {
                            LookUpId = 505,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 1, 22, 15, 24, 53, 618, DateTimeKind.Local).AddTicks(4125),
                            Id = 0,
                            IsDeleted = false,
                            IsSoldOut = false,
                            LookupCategoryId = 5,
                            NameAr = "أزرق",
                            NameEn = "Blue"
                        },
                        new
                        {
                            LookUpId = 506,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 1, 22, 15, 24, 53, 618, DateTimeKind.Local).AddTicks(4127),
                            Id = 0,
                            IsDeleted = false,
                            IsSoldOut = false,
                            LookupCategoryId = 5,
                            NameAr = "أخضر",
                            NameEn = "Green"
                        },
                        new
                        {
                            LookUpId = 507,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 1, 22, 15, 24, 53, 618, DateTimeKind.Local).AddTicks(4128),
                            Id = 0,
                            IsDeleted = false,
                            IsSoldOut = false,
                            LookupCategoryId = 5,
                            NameAr = "بنفسجي",
                            NameEn = "Purple"
                        },
                        new
                        {
                            LookUpId = 508,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 1, 22, 15, 24, 53, 618, DateTimeKind.Local).AddTicks(4130),
                            Id = 0,
                            IsDeleted = false,
                            IsSoldOut = false,
                            LookupCategoryId = 5,
                            NameAr = "أزرق سماوي",
                            NameEn = "Aqua Blue"
                        },
                        new
                        {
                            LookUpId = 509,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 1, 22, 15, 24, 53, 618, DateTimeKind.Local).AddTicks(4131),
                            Id = 0,
                            IsDeleted = false,
                            IsSoldOut = false,
                            LookupCategoryId = 5,
                            NameAr = "وردي",
                            NameEn = "Pink"
                        },
                        new
                        {
                            LookUpId = 510,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 1, 22, 15, 24, 53, 618, DateTimeKind.Local).AddTicks(4132),
                            Id = 0,
                            IsDeleted = false,
                            IsSoldOut = false,
                            LookupCategoryId = 5,
                            NameAr = "برتقالي",
                            NameEn = "Orange"
                        },
                        new
                        {
                            LookUpId = 511,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 1, 22, 15, 24, 53, 618, DateTimeKind.Local).AddTicks(4134),
                            Id = 0,
                            IsDeleted = false,
                            IsSoldOut = false,
                            LookupCategoryId = 5,
                            NameAr = "أصفر",
                            NameEn = "Yellow"
                        },
                        new
                        {
                            LookUpId = 512,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 1, 22, 15, 24, 53, 618, DateTimeKind.Local).AddTicks(4135),
                            Id = 0,
                            IsDeleted = false,
                            IsSoldOut = false,
                            LookupCategoryId = 5,
                            NameAr = "أحمر",
                            NameEn = "Red"
                        },
                        new
                        {
                            LookUpId = 513,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 1, 22, 15, 24, 53, 618, DateTimeKind.Local).AddTicks(4137),
                            Id = 0,
                            IsDeleted = false,
                            IsSoldOut = false,
                            LookupCategoryId = 5,
                            NameAr = "لون متدرج",
                            NameEn = "Gradient Color"
                        },
                        new
                        {
                            LookUpId = 514,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 1, 22, 15, 24, 53, 618, DateTimeKind.Local).AddTicks(4139),
                            Id = 0,
                            IsDeleted = false,
                            IsSoldOut = false,
                            LookupCategoryId = 5,
                            NameAr = "بامبي",
                            NameEn = "Bambi"
                        },
                        new
                        {
                            LookUpId = 515,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 1, 22, 15, 24, 53, 618, DateTimeKind.Local).AddTicks(4140),
                            Id = 0,
                            IsDeleted = false,
                            IsSoldOut = false,
                            LookupCategoryId = 5,
                            NameAr = "لون البشرة",
                            NameEn = "Nude"
                        },
                        new
                        {
                            LookUpId = 516,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 1, 22, 15, 24, 53, 618, DateTimeKind.Local).AddTicks(4142),
                            Id = 0,
                            IsDeleted = false,
                            IsSoldOut = false,
                            LookupCategoryId = 5,
                            NameAr = "أزرق كوبالت",
                            NameEn = "Cobalt Blue"
                        },
                        new
                        {
                            LookUpId = 701,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 1, 22, 15, 24, 53, 618, DateTimeKind.Local).AddTicks(4143),
                            Id = 0,
                            IsDeleted = false,
                            IsSoldOut = false,
                            LookupCategoryId = 7,
                            NameAr = "تخصيص",
                            NameEn = "Customization"
                        },
                        new
                        {
                            LookUpId = 702,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 1, 22, 15, 24, 53, 618, DateTimeKind.Local).AddTicks(4145),
                            Id = 0,
                            IsDeleted = false,
                            IsSoldOut = false,
                            LookupCategoryId = 2,
                            NameAr = "رسوم التوصيل",
                            NameEn = "Delivery Fee"
                        },
                        new
                        {
                            LookUpId = 800,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 1, 22, 15, 24, 53, 618, DateTimeKind.Local).AddTicks(4146),
                            Id = 0,
                            IsDeleted = false,
                            IsSoldOut = false,
                            LookupCategoryId = 8,
                            NameAr = "معلق",
                            NameEn = "Pending"
                        },
                        new
                        {
                            LookUpId = 801,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 1, 22, 15, 24, 53, 618, DateTimeKind.Local).AddTicks(4147),
                            Id = 0,
                            IsDeleted = false,
                            IsSoldOut = false,
                            LookupCategoryId = 8,
                            NameAr = "قيد العمل",
                            NameEn = "InProgress"
                        },
                        new
                        {
                            LookUpId = 802,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 1, 22, 15, 24, 53, 618, DateTimeKind.Local).AddTicks(4149),
                            Id = 0,
                            IsDeleted = false,
                            IsSoldOut = false,
                            LookupCategoryId = 8,
                            NameAr = "مكتمل",
                            NameEn = "Completed"
                        },
                        new
                        {
                            LookUpId = 803,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 1, 22, 15, 24, 53, 618, DateTimeKind.Local).AddTicks(4150),
                            Id = 0,
                            IsDeleted = false,
                            IsSoldOut = false,
                            LookupCategoryId = 8,
                            NameAr = "ملغى",
                            NameEn = "Cancelled"
                        },
                        new
                        {
                            LookUpId = 900,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 1, 22, 15, 24, 53, 618, DateTimeKind.Local).AddTicks(4152),
                            Id = 0,
                            IsDeleted = false,
                            IsSoldOut = false,
                            LookupCategoryId = 9,
                            NameAr = "مطرة ماء",
                            NameEn = "Bottle"
                        },
                        new
                        {
                            LookUpId = 901,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 1, 22, 15, 24, 53, 618, DateTimeKind.Local).AddTicks(4153),
                            Id = 0,
                            IsDeleted = false,
                            IsSoldOut = false,
                            LookupCategoryId = 9,
                            NameAr = "غطاء",
                            NameEn = "lid"
                        },
                        new
                        {
                            LookUpId = 902,
                            CreatedBy = "admin",
                            CreatedOn = new DateTime(2025, 1, 22, 15, 24, 53, 618, DateTimeKind.Local).AddTicks(4154),
                            Id = 0,
                            IsDeleted = false,
                            IsSoldOut = false,
                            LookupCategoryId = 9,
                            NameAr = "المحاية",
                            NameEn = "Rubber"
                        });
                });

            modelBuilder.Entity("OceanaAura.Domain.Entities.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Apartment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("OceanaAura.Domain.Entities.ProductSize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifyBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifyOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PriceJOR")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceUAE")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceUSD")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SizeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SizeId");

                    b.ToTable("productSizes");
                });

            modelBuilder.Entity("OceanaAura.Domain.Entities.ProductsEntities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("GradientColor")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHide")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMagneticLid")
                        .HasColumnType("bit");

                    b.Property<string>("ModifyBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifyOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PriceJOR")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PriceUAE")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PriceUSD")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("products");
                });

            modelBuilder.Entity("OceanaAura.Domain.Entities.AdditionalProduct", b =>
                {
                    b.HasOne("OceanaAura.Domain.Entities.LookUp.LookUpEntity", "AdditionalProducts")
                        .WithMany()
                        .HasForeignKey("LookUpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AdditionalProducts");
                });

            modelBuilder.Entity("OceanaAura.Domain.Entities.Cart", b =>
                {
                    b.HasOne("OceanaAura.Domain.Entities.Order", "Order")
                        .WithMany("carts")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("OceanaAura.Domain.Entities.Feedback", b =>
                {
                    b.HasOne("OceanaAura.Domain.Entities.ProductsEntities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("OceanaAura.Domain.Entities.Image", b =>
                {
                    b.HasOne("OceanaAura.Domain.Entities.ProductsEntities.Product", "Product")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("OceanaAura.Domain.Entities.Invoice", b =>
                {
                    b.HasOne("OceanaAura.Domain.Entities.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("OceanaAura.Domain.Entities.LookUp.LookUpEntity", b =>
                {
                    b.HasOne("OceanaAura.Domain.Entities.LookUp.LookUpCategory", "LookupCategory")
                        .WithMany("lookUps")
                        .HasForeignKey("LookupCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LookupCategory");
                });

            modelBuilder.Entity("OceanaAura.Domain.Entities.ProductSize", b =>
                {
                    b.HasOne("OceanaAura.Domain.Entities.LookUp.LookUpEntity", "Size")
                        .WithMany()
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Size");
                });

            modelBuilder.Entity("OceanaAura.Domain.Entities.ProductsEntities.Product", b =>
                {
                    b.HasOne("OceanaAura.Domain.Entities.LookUp.LookUpEntity", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("OceanaAura.Domain.Entities.LookUp.LookUpCategory", b =>
                {
                    b.Navigation("lookUps");
                });

            modelBuilder.Entity("OceanaAura.Domain.Entities.Order", b =>
                {
                    b.Navigation("carts");
                });

            modelBuilder.Entity("OceanaAura.Domain.Entities.ProductsEntities.Product", b =>
                {
                    b.Navigation("ProductImages");
                });
#pragma warning restore 612, 618
        }
    }
}
