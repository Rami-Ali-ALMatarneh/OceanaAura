@{
    Layout = "../Shared/_AdminLayout.cshtml";
    var Status = ViewBag.Status as List<OceanaAura.Web.Models.Lookup.StatusVM>;
    var Payments = ViewBag.Payments as List<OceanaAura.Web.Models.BuyVM.deliveryFee>;
    var Regions = ViewBag.Regions as List<OceanaAura.Web.Models.BuyVM.RegionVM>;
    var Colors = ViewBag.Colors as List<OceanaAura.Web.Models.Colors.ColorVM>;
    var Sizes = ViewBag.Sizes as List<OceanaAura.Web.Models.Size.SizeVM>;
    var Products = ViewBag.Products as List<OceanaAura.Web.Models.Products.ProductVMHome>;
}

<link href="https://cdn.datatables.net/1.11.5/css/dataTables.bootstrap5.min.css" rel="stylesheet" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
<style>
    .card-header {
        font-weight: bold;
        letter-spacing: 0.5px;
    }

    .modal-body {
        font-size: 0.95rem;
        line-height: 1.5;
    }

    .modal-content {
        border-radius: 10px;
        overflow: hidden;
    }

    .card {
        border-radius: 8px;
    }
</style>

<div class="w-100">
    <!-- Page Heading -->
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h3 mb-0 text-gray-800">Orders</h1>
    </div>
    <hr />
    <!-- DataTable -->
    <table id="ordersTable" class="table table-striped table-bordered dt-responsive nowrap" style="width:100%">
        <thead>
            <tr>
                <th>Email</th>
                <th>Phone Number</th>
                <th>Delivery Region</th>
                <th>Total Price</th>
                <th>Status</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
</div>

<!-- Modal -->
<div class="modal fade" id="orderDetailsModal" tabindex="-1" aria-labelledby="orderDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-xl">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="orderDetailsModalLabel">
                    <i class="fas fa-info-circle"></i> Order Details
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="container-fluid">
                    <div class="row g-3">
                        <!-- Customer Information -->
                        <div class="col-12 mt-2 mb-2">
                            <div class="card border-0 shadow-sm">
                                <div class="card-header bg-secondary text-white">
                                    <h6><i class="fas fa-user"></i> Customer Information</h6>
                                </div>
                                <div class="card-body">
                                    <p><strong>Email:</strong> <span id="orderEmail"></span></p>
                                    <p><strong>Phone Number:</strong> <span id="orderPhoneNumber"></span></p>
                                    <p><strong>First Name:</strong> <span id="orderFirstName"></span></p>
                                    <p><strong>Last Name:</strong> <span id="orderLastName"></span></p>
                                </div>
                            </div>
                        </div>

                        <!-- Address Information -->
                        <div class="col-md-6 mt-2 mb-2">
                            <div class="card border-0 shadow-sm">
                                <div class="card-header bg-secondary text-white">
                                    <h6><i class="fas fa-map-marker-alt"></i> Address Information</h6>
                                </div>
                                <div class="card-body">
                                    <p><strong>Address:</strong> <span id="orderAddress"></span></p>
                                    <p><strong>City:</strong> <span id="orderCity"></span></p>
                                    <p><strong>Postal Code:</strong> <span id="orderPostalCode"></span></p>
                                    <p><strong>Apartment:</strong> <span id="orderApartment"></span></p>
                                </div>
                            </div>
                        </div>

                        <!-- Order Information -->
                        <div class="col-md-6 mt-2 mb-2">
                            <div class="card border-0 shadow-sm">
                                <div class="card-header bg-secondary text-white">
                                    <h6><i class="fas fa-box"></i> Order Details</h6>
                                </div>
                                <div class="card-body">
                                    <p><strong>Payment currency:</strong> <span id="orderRegion"></span></p>
                                    <p><strong>Delivery Region:</strong> <span id="orderRegionId"></span></p>
                                </div>
                            </div>
                        </div>

                        <!-- Cart Information -->
                        <div class="col-12 mt-2 mb-2">
                            <div class="card border-0 shadow-sm">
                                <div class="card-header bg-secondary text-white">
                                    <h6><i class="fas fa-shopping-cart"></i> Cart Details</h6>
                                </div>
                                <div class="card-body">
                                    <table class="table table-bordered">
                                        <thead>
                                            <tr>
                                                <th>Product Name</th>
                                                <th>Quantity</th>
                                                <th>Size</th>
                                                <th>Color</th>
                                                <th>Lid & Price</th>
                                                <th>Product Price</th>
                                                <th>Shipping</th>
                                                <th>Total Price</th>
                                            </tr>
                                        </thead>
                                        <tbody id="orderCarts">
                                            <!-- Cart items will be dynamically populated here -->
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>

                        <!-- Pricing Information -->
                        <div class="col-12 mt-2 mb-2">
                            <div class="card border-0 shadow-sm">
                                <div class="card-header bg-secondary text-white">
                                    <h6><i class="fas fa-tags"></i> Pricing Details</h6>
                                </div>
                                <div class="card-body">
                                    <div class="row">
                                        <div class="col-md-4">
                                            <p><strong>Subtotal:</strong> <span id="orderSubtotal"></span></p>
                                        </div>
                                        <div class="col-md-4">
                                            <p><strong>Shipping:</strong> <span id="orderShippingCost"></span></p>
                                        </div>
                                        <div class="col-md-4">
                                            <p><strong>Lids Pricing:</strong> <span id="lidsPricing"></span></p>
                                        </div>
                                    </div>
                                    <p class="text-info"><strong>Total Price:</strong> <span id="orderTotalPrice"></span></p>
                                </div>
                            </div>
                        </div>

                        <!-- Status -->
                        <div class="col-12 mt-2 mb-2">
                            <div class="card border-0 shadow-sm">
                                <div class="card-header bg-secondary text-white">
                                    <h6><i class="fas fa-info-circle"></i> Order Status</h6>
                                </div>
                                <div class="card-body">
                                    <p><strong>Status:</strong> <span id="orderStatus"></span></p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section ScriptsAuth {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/dataTables.bootstrap5.min.js"></script>
    <script>
        $(document).ready(function () {
            // Initialize DataTable
            var table = $('#ordersTable').DataTable({
                "serverSide": true,
                "processing": true,
                "ajax": {
                    "url": "@Url.Action("GetOrders", "Admin")",
                    "type": "POST",
                    "datatype": "json",
                },
                "scrollX": true,
                "responsive": true,
                "columns": [
                    { "data": "email", "name": "Email", "autoWidth": true },
                    { "data": "phoneNumber", "name": "PhoneNumber", "autoWidth": true },
                    {
                        "data": "regionId",
                        "name": "RegionId",
                        "autoWidth": true,
                        "render": function (data, type, row) {
                            var regions = @Html.Raw(Json.Serialize(ViewBag.Regions));
                            var region = regions.find(r => r.id === data);
                            return region ? region.nameEn : "Unknown Region";
                        }
                    },
                    {
                        "data": "totalPrice",
                        "name": "TotalPrice",
                        "autoWidth": true,
                        "render": function (data, type, row) {
                            let totalPrice = 0;
                            let subtotal = 0;

                            // Calculate subtotal for all items
                            row.carts.forEach(cart => {
                                subtotal += cart.productPrice * cart.quantity;
                            });

                            // Apply discount once for the entire order
                                totalPrice = subtotal ;
                          
                            // Add shipping cost based on region (applied once per order)
                            if (row.region === "Jordan" || row.region === "United Arab Emirates") {
                                totalPrice += row.carts[0].shipping; // Assuming shipping cost is the same for all items in the order
                            }

                            // Format the total price based on the region
                            let formattedPrice;
                            if (row.region === "Jordan") {
                                formattedPrice = `${totalPrice.toFixed(2)} JOD`;
                            } else if (row.region === "United Arab Emirates") {
                                formattedPrice = `${totalPrice.toFixed(2)} AED`;
                            } else {
                                formattedPrice = `${totalPrice.toFixed(2)} USD`;
                            }

                            return formattedPrice;
                        }
                    },
                    {
                        "data": "statusId",
                        "name": "StatusId",
                        "orderable": false,
                        "render": function (data, type, row) {
                            var statuses = @Html.Raw(Json.Serialize(Status));
                            var options = statuses.map(function (status) {
                                var selected = status.statusId === data ? "selected" : "";
                                return `<option value="${status.statusId}" ${selected}>${status.nameEn}</option>`;
                            }).join("");

                            return `<select class="form-select form-select-sm" onchange="updateOrderStatus(${row.id}, this.value)">${options}</select>`;
                        }
                    },
                    {
                        "data": null,
                        "orderable": false,
                        "render": function (data, type, row) {
                            return `
                                <a href="#" class="view-details btn btn-sm btn-info"
                                   data-details='${JSON.stringify(row)}'>
                                    <i class="fas fa-eye"></i>
                                </a>
                                <a href="#" class="delete-order btn btn-sm btn-danger ms-2"
                                   data-id='${row.id}'>
                                    <i class="fas fa-trash"></i>
                                </a>
                            `;
                        }
                    }
                ],
                "order": [[0, 'asc']],
                "pageLength": 10
            });

            // Delete order functionality
            $(document).on('click', '.delete-order', function (e) {
                e.preventDefault();
                var orderId = $(this).data('id');
                Swal.fire({
                    title: 'Are you sure?',
                    text: 'You won\'t be able to revert this!',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Yes, delete it!',
                    cancelButtonText: 'No, keep it'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: '@Url.Action("DeleteOrder", "Admin")',
                            type: 'POST',
                            data: { orderId: orderId },
                            success: function (response) {
                                if (response.success) {
                                    $('#ordersTable').DataTable().ajax.reload();
                                    Swal.fire('Deleted!', 'The order has been deleted.', 'success');
                                } else {
                                    Swal.fire('Error!', 'Failed to delete the order.', 'error');
                                }
                            },
                            error: function () {
                                Swal.fire('Error!', 'An error occurred while deleting the order.', 'error');
                            }
                        });
                    }
                });
            });

            // Show order details in modal
            $('#ordersTable').on('click', '.view-details', function () {
                debugger
                var order = $(this).data('details');
                var statuses = @Html.Raw(Json.Serialize(Status));
                var Regions = @Html.Raw(Json.Serialize(Regions));
                var Payments = @Html.Raw(Json.Serialize(Payments));
                var Colors = @Html.Raw(Json.Serialize(Colors));
                var Sizes = @Html.Raw(Json.Serialize(Sizes));
                var Products = @Html.Raw(Json.Serialize(Products));

                var status = statuses.find(s => s.statusId === order.statusId);
                var region = Regions.find(r => r.id === order.regionId);
                var regionName = region ? region.nameEn : "Unknown Region";

                // Populate customer information
                $('#orderEmail').text(order.email);
                $('#orderPhoneNumber').text(order.phoneNumber);
                $('#orderFirstName').text(order.firstName);
                $('#orderLastName').text(order.lastName);

                // Populate address information
                $('#orderAddress').text(order.address);
                $('#orderCity').text(order.city);
                $('#orderPostalCode').text(order.postalCode);
                $('#orderApartment').text(order.apartment);

                // Populate order information
                $('#orderRegion').text(order.region);
                $('#orderRegionId').text(regionName);
               // Calculate total discount from all cart items
                // Populate cart information
                var cartHtml = '';
                order.carts.forEach(function (cart) {
                    var product = Products.find(p => p.id === cart.productId);
                    var productName = product ? product.name : "Unknown Product";
                    var color = Colors.find(c => c.id === cart.colorId);
                    var colorName = color ? color.nameEn : "Unknown Color";
                    var size = Sizes.find(s => s.id === cart.sizeId);
                    var sizeName = size ? size.nameEn : "Unknown Size";

                    cartHtml += `
                        <tr>
                            <td>${productName}</td>
                            <td>${cart.quantity}</td>
                            <td>${sizeName}</td>
                            <td>${colorName}</td>
                            <td>${cart.lidName} - ${cart.lidPrice}</td>
                            <td>${cart.productPrice}</td>
                            <td>${cart.shipping}</td>
                            <td>${cart.totalPrice}</td>
                        </tr>
                    `;
                });
                $('#orderCarts').html(cartHtml);

                // Calculate Pricing Details
                let subtotal = 0;
                let shippingCost = 0;
                let totalPrice = 0;
                let lidsPricing = 0;
                order.carts.forEach(cart => {
                       subtotal += cart.productPrice * cart.quantity;
                       lidsPricing += cart.lidPrice;
                       if (cart.discount > 0) {
                           discountAmount += (cart.productPrice * cart.quantity);
                       }
                   });                // Add shipping cost based on region (applied once per order)
                if (order.region === "Jordan" || order.region === "United Arab Emirates") {
                    shippingCost = order.carts[0].shipping; // Assuming shipping cost is the same for all items in the order
                }

                // Calculate total price
                totalPrice = subtotal + shippingCost;

                // Format the values based on the region
                let currency = order.region === "Jordan" ? "JOD" : order.region === "United Arab Emirates" ? "AED" : "USD";

                // Populate Pricing Details
                $('#orderSubtotal').text(`${subtotal.toFixed(2)} ${currency}`);
                $('#orderShippingCost').text(`${shippingCost.toFixed(2)} ${currency}`);
                $('#orderTotalPrice').text(`${totalPrice.toFixed(2)} ${currency}`);
                $('#lidsPricing').text(`${lidsPricing.toFixed(2)} ${currency}`);

                // Populate status
                $('#orderStatus').text(status.nameEn);

                // Show the modal
                $('#orderDetailsModal').modal('show');
            });
        });

        // Function to update order status
        function updateOrderStatus(orderId, newStatusId) {
            Swal.fire({
                title: 'Are you sure?',
                text: "Do you want to update the order status?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, update it!',
                cancelButtonText: 'No'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: `/Admin/UpdateOrderStatus`,
                        type: 'PUT',
                        data: { id: orderId, statusId: newStatusId },
                        success: function (response) {
                            $('#ordersTable').DataTable().ajax.reload();
                            Swal.fire({
                                icon: 'success',
                                title: 'Status Updated',
                                text: response.Message,
                            });
                        },
                        error: function (xhr) {
                            var errorMessage = xhr.responseJSON?.Error || "An error occurred while updating the order status.";
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: errorMessage,
                            });
                        }

                    });
                }
            });
        }
    </script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        document.getElementById('checkoutForm').addEventListener('submit', function (e) {
            e.preventDefault(); // Prevent the default form submission

            Swal.fire({
                title: 'Are you sure?',
                text: 'Do you want to proceed with the purchase?',
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, buy now!',
                cancelButtonText: 'No, cancel'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Submit the form via AJAX
                    fetch(this.action, {
                        method: 'POST',
                        body: new FormData(this)
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            Swal.fire({
                                title: 'Success!',
                                text: 'Your order has been placed successfully!',
                                icon: 'success',
                                timer: 1500, // Auto-close after 1.5 seconds
                                showConfirmButton: false
                            }).then(() => {
                                // Redirect to the Store action in the Home controller
                                window.location.href = '@Url.Action("Store", "Home")';
                            });
                        } else {
                            Swal.fire({
                                title: 'Error!',
                                text: 'Failed to place the order. Please try again.',
                                icon: 'error',
                                timer: 1500,
                                showConfirmButton: false
                            });
                        }
                    })
                    .catch(error => {
                        Swal.fire({
                            title: 'Error!',
                            text: 'An error occurred while processing your request. Please try again.',
                            icon: 'error',
                            timer: 1500,
                            showConfirmButton: false
                        });
                    });
                }
            });
        });
    </script>
}