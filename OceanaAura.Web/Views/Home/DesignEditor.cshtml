@namespace OceanaAura.Web.Models.BuyVM
@model OceanaAura.Web.Models.BuyVM.OrderDetails

@{
    var sizes = (List<OceanaAura.Web.Models.Size.SizeVM>)ViewBag.Sizes;
    var SelectedRegionPage = ViewBag.SelectedRegionPage;
    var Lids = (List<OceanaAura.Web.Models.BuyVM.LidsVM>)ViewBag.Lids;
    var CartSummaryList = ViewBag.CartSummaryList as List<OceanaAura.Web.Models.BuyVM.OrderSummary>;
    var SelectedLanguage = ViewBag.SelectedLanguage; // Get the selected language
    var colors = (List<OceanaAura.Web.Models.Colors.ColorVM>)ViewBag.Colors; // Add colors from ViewBag
}

<!-- Add Evil Empire Font CDN -->
<link href="https://fonts.cdnfonts.com/css/evil-empire" rel="stylesheet">
<link rel="stylesheet" type="text/css" href="~/css/arabicLang.css">

<style>
    /* Custom CSS for the spinner (if not using Bootstrap) */
    .spinner-border {
        width: 5rem;
        height: 5rem;
        border: 1em solid black;
        border-right-color: transparent;
        border-radius: 50%;
        animation: spinner-border 0.75s linear infinite;
    }

    @@keyframes spinner-border {
        to {
            transform: rotate(360deg);
        }
    }

    /* Ensure the parent container takes full height and width */
    .canvas-container {
        width: 100%; /* Full width of its parent */
        height: 100vh; /* Full viewport height (or use 100% if the parent has a defined height) */
        position: relative; /* For positioning child elements if needed */
    }

    .upper-canvas {
        font-family: 'Evil Empire', sans-serif;
        width: fit-content;
    }

    .design-canvas {
        font-family: 'Evil Empire', sans-serif;
    }

    .row > * {
        padding-right: 0;
    }

    /* Make the canvas take up 100% of its container */
    #design-canvas {
        font-family: 'Evil Empire', sans-serif;
        width: 100% !important; /* Full width of the container */
        height: 100% !important; /* Full height of the container */
        display: block; /* Remove extra space below the canvas */
    }

    /* Style for the front image box */
    .front-image-box {
        border: 2px solid #000;
        margin-bottom: 20px;
        display: flex;
        align-items: center;
        justify-content: center;
        overflow: hidden;
        cursor: pointer; /* Add pointer cursor to indicate clickability */
    }

        .front-image-box img {
            max-width: 100%;
            max-height: 100%;
        }

    /* Style for the Make Order button */
    #make-order {
        margin-top: 20px;
    }

    /* Mobile-specific styles */
    @@media (max-width: 768px) {
        .front-image-box {
            display: none; /* Hide the front image box on mobile */
        }

        .show-front-image-btn {
            display: block; /* Show the button to display the front image */
            margin-bottom: 20px;
        }

        .col-md-9 {
            order: -1; /* Move the canvas to the top on mobile */
        }
    }

    @@media (min-width: 769px) {
        .show-front-image-btn {
            display: none; /* Hide the button on desktop */
        }
    }

    /* Lids Cards Styles - Responsive */
    .lids-container {
        display: flex;
        flex-wrap: wrap;
        margin-bottom: 15px;
        gap: 10px;
    }

    .lid-card {
        flex: 1 0 calc(25% - 10px); /* 4 cards per row by default */
        min-width: 100px;
        max-width: 150px;
        aspect-ratio: 3/4; /* Maintain aspect ratio */
        cursor: pointer;
        border: 2px solid #ddd;
        border-radius: 8px;
        padding: 8px;
        transition: all 0.3s;
        display: flex;
        flex-direction: column;
    }

        .lid-card.selected {
            border: 2px solid #000;
            background-color: #f8f9fa;
        }

        .lid-card img {
            width: 100%;
            height: auto;
            flex-grow: 1;
            object-fit: contain;
            margin-bottom: 5px;
        }

        .lid-card .lid-name {
            font-size: 0.8rem;
            text-align: center;
            margin-bottom: 3px;
            word-break: break-word;
        }

        .lid-card .lid-price {
            font-size: 0.7rem;
            text-align: center;
            color: #666;
        }

    /* Responsive adjustments */
    @@media (max-width: 992px) {
        .lid-card {
            flex: 1 0 calc(33.333% - 10px); /* 3 cards per row on medium screens */
        }
    }

    @@media (max-width: 768px) {
        .lid-card {
            flex: 1 0 calc(50% - 10px); /* 2 cards per row on small screens */
        }
    }

    @@media (max-width: 576px) {
        .lid-card {
            flex: 1 0 calc(50% - 10px); /* 2 cards per row on extra small screens */
            min-width: 80px;
        }
    }
</style>

<div class="container-fluid mt-4">
    <div class="row w-100 h-100 p-3">
        <!-- Left Sidebar -->
        <div class="col-md-3">
            <div class="card shadow-sm w-100 h-100">
                <div class="card-body w-100 h-100">
                    <!-- Size Selection -->
                    <div class="mb-4">
                        <h4 class="h6">@(SelectedLanguage == "ar" ? "اختر حجم " : "Select Bottle Size")</h4>
                        <select id="size-select" class="form-select">
                            @foreach (var size in sizes)
                            {
                                <option value="@size.Id">@(SelectedLanguage == "ar" ? size.NameAr : size.NameEn)</option>
                            }
                        </select>
                    </div>

                    <!-- Color Selection -->
                    <div class="mb-4">
                        <h4 class="h6">@(SelectedLanguage == "ar" ? "اختر لون " : "Select Bottle Color")</h4>
                        <div class="d-flex flex-wrap gap-3">
                            @foreach (var color in colors)
                            {
                                <label class="color-circle @(color.IsSoldOut ? "sold-out" : "") position-relative"
                                       style="background-image: url('/File/ColorsImg/@color.ImageURL');">
                                    <input type="radio" name="ColorId" value="@color.Id"
                                           class="d-none"
                                           @(color.IsSoldOut ? "disabled" : "") />
                                    @if (color.IsSoldOut)
                                    {
                                        <span class="sold-out-mark position-absolute top-50 start-50 translate-middle">X</span>
                                    }
                                </label>
                            }
                        </div>
                    </div>

                    <!-- Lid Selection -->
                    <div class="mb-4">
                        <h4 class="h6">@(SelectedLanguage == "ar" ? "اختر الغطاء" : "Select Your Lid")</h4>
                        <div class="lids-container">
                            @foreach (var lid in Lids)
                            {
                                <label class="lid-card" data-lid-id="@lid.Id">
                                    <img src="~/File/ColorsImg/@lid.ProductImages" alt="@lid.Name" loading="lazy" />
                                    <div class="lid-name">@lid.Name</div>
                                    <div class="lid-price">
                                        @if (lid.IsMagneticLid)
                                        {
                                            if (SelectedRegionPage == "Jordan")
                                            {
                                                <span>@lid.PriceJOR JOD</span>
                                            }
                                            else if (SelectedRegionPage == "United Arab Emirates")
                                            {
                                                <span>@lid.PriceUAE AED</span>
                                            }
                                        }
                                        else
                                        {
                                            <span>Free</span>
                                        }
                                    </div>
                                    <input type="radio" name="LidId" value="@lid.Id" style="display: none;" />
                                </label>
                            }
                        </div>
                    </div>

                    <!-- Button to show front image on mobile -->
                    <div class="mb-4 show-front-image-btn">
                        <button id="show-front-image" class="btn btn-secondary w-100">@(SelectedLanguage == "ar" ? "عرض الصورة الأمامية" : "Show Front Image")</button>
                    </div>

                    <!-- Front Image Box -->
                    <div class="mb-4 front-image-box">
                        <img id="front-image" src="" alt="Front Image" loading="lazy" style="display: none;">
                    </div>

                    <!-- Font Selection -->
                    <div class="mb-4">
                        <h4 class="h6">@(SelectedLanguage == "ar" ? "اختر الخط" : "Select Your Font")</h4>
                        <select id="font-select" class="form-select">
                            <option value="">@(SelectedLanguage == "ar" ? "اختر الخط" : "Select Your Font")</option>
                            <option value="Evil Empire">Evil Empire (English)</option>
                            <option value="DecoType-Thuluth-II">DecoType-Thuluth-II (عربي)</option>
                        </select>
                    </div>

                    <!-- Add Text Section -->
                    <div class="mb-4">
                        <h4 class="h6">@(SelectedLanguage == "ar" ? "إضافة نص" : "Add Text")</h4>
                        <input type="text" id="text-input" class="form-control mb-4" placeholder="@(SelectedLanguage == "ar" ? "أدخل النص (من 2 إلى 20 أحرف)" : "Enter text (2 to 20 characters)")">
                    </div>

                    <!-- Make Order Button -->
                    <div class="mb-4">
                        <button id="make-order" class="btn btn-primary w-100">@(SelectedLanguage == "ar" ? "تقديم الطلب" : "Place Order")</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Canvas Area -->
        <div class="col-md-9">
            <div class="card shadow-sm" style="z-index:100;position:relative">
                <div class="card-body">
                    <div class="canvas-container">
                        <canvas id="design-canvas" style="width:fit-content"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Add this inside the canvas container or at the end of the body -->
<div id="spinner" class="spinner-border text-primary" role="status" style="display: none; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); z-index: 1000;">
    <span class="visually-hidden">Loading...</span>
</div>
<!-- Load jQuery -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<!-- Load Fabric.js -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/fabric.js/5.2.4/fabric.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    $(document).ready(function () {
        // Initialize Fabric.js canvas
        const canvas = new fabric.Canvas('design-canvas', {
            backgroundColor: '#ffffff',
        });
        const text = new fabric.Text('', {
            left: 100,
            top: 100,
            fontFamily: 'Evil Empire', // Set the font family
            fontSize: 30,
            fill: 'silver'
        });
        const text1 = new fabric.Text('', {
            left: 100,
            top: 100,
            fontFamily: 'DecoType-Thuluth-II', // Set the font family
            fontSize: 30,
            fill: 'silver'
        });
        canvas.add(text);
        canvas.add(text1);

        // Load default bottle image
        const defaultBottleImageUrl = '/File/HomeImg/Artboard350.svg'; // Replace with your default image path
        fabric.Image.fromURL(defaultBottleImageUrl, function (img) {
            // Scale and center the image
            const scaleFactor = Math.min(
                canvas.getWidth() / img.width,
                canvas.getHeight() / img.height
            );
            img.scale(scaleFactor);
            img.set({
                left: (canvas.getWidth() - img.width * scaleFactor) / 2,
                top: (canvas.getHeight() - img.height * scaleFactor) / 2,
                lockMovementX: true,
                lockMovementY: true,
                lockRotation: true,
                lockScalingX: true,
                lockScalingY: true,
                hasControls: false,
                hasBorders: false,
                selectable: false
            });
            canvas.add(img);
        });

        // Force canvas redraw on scroll
        window.addEventListener('scroll', function () {
            canvas.renderAll(); // Force the canvas to redraw
        });

        // Function to update bottle image
        function updateBottleImage() {
            const sizeId = $('#size-select').val();
            const colorId = $('input[name="ColorId"]:checked').val();
            const lidId = $('input[name="LidId"]:checked').val();

            // Validate if size, color, and lid are selected
            if (!sizeId || !colorId || !lidId) {
                return;
            }

            // Show the spinner
            $('#spinner').show();

            // Make an AJAX request to fetch the filtered bottle image
            $.ajax({
                url: '/Home/GetFilteredBottleImg',
                type: 'GET',
                data: {
                    sizeId: sizeId,
                    colorId: colorId,
                    lidId: lidId
                },
                success: function (data) {
                    // Clear the canvas
                    canvas.clear();

                    const baseUrl = '/File/ColorsImg/'; // Replace with your actual base URL

                    // Display the front image in the box
                    if (data.imgUrlFront) {
                        const frontImageUrl = baseUrl + data.imgUrlFront;
                        $('#front-image').attr('src', frontImageUrl).show();
                    }

                    // Display the back image on the canvas
                    if (data.imgUrlBack) {
                        const backImageUrl = baseUrl + data.imgUrlBack;
                        fabric.Image.fromURL(backImageUrl, function (img) {
                            // Calculate the scaling factor to fit the image within the canvas
                            const scaleFactor = Math.min(
                                canvas.getWidth(), // Scale based on width
                                canvas.getHeight() / img.height // Scale based on height
                            );

                            // Apply the scaling factor to the image
                            img.scale(scaleFactor);

                            // Center the image on the canvas
                            img.set({
                                left: (canvas.getWidth() - img.width * scaleFactor) / 2,
                                top: (canvas.getHeight() - img.height * scaleFactor) / 2,
                                lockMovementX: true, // Prevent horizontal movement
                                lockMovementY: true, // Prevent vertical movement
                                lockRotation: true, // Prevent rotation
                                lockScalingX: true, // Prevent horizontal scaling
                                lockScalingY: true, // Prevent vertical scaling
                                hasControls: false, // Hide controls
                                hasBorders: false, // Hide borders
                                selectable: false // Make it non-selectable
                            });

                            // Add the image to the canvas
                            canvas.add(img);
                            // Hide the spinner after the image is loaded
                            $('#spinner').hide();
                        });
                    }
                },
                error: function (xhr, status, error) {
                    // Hide the spinner in case of an error
                    $('#spinner').hide();
                    const selectedLanguage = '@SelectedLanguage';
                    const message = selectedLanguage === 'ar' ? 'المنتوج غير متوفر في المخزون!' : 'Product is out of stock!';
                    const confirmButtonText = selectedLanguage === 'ar' ? 'حسناً' : 'OK';

                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: message,
                        confirmButtonText: confirmButtonText
                    });
                }
            });
        }

        // Live update when size, color or lid changes
        $('#size-select, input[name="ColorId"], input[name="LidId"]').change(function() {
            updateBottleImage();
        });

        // Text input live update
        $('#text-input').on('input', function() {
            const selectedFont = $('#font-select').val();
            const textInput = $(this).val();

            // Remove existing text
            const existingText = canvas.getObjects().find(obj => obj.type === 'textbox');
            if (existingText) {
                canvas.remove(existingText);
            }

            if (textInput && selectedFont) {
                // Add text to the canvas at the bottom center of the image
                const text = new fabric.Textbox(textInput, {
                    left: canvas.getWidth() / 2, // Center horizontally
                    top: canvas.getHeight() - 70, // Position at the bottom with some padding
                    fontSize: 34,
                    fill: 'silver', // Use selected color
                    fontFamily: selectedFont === 'Evil Empire' ? "'Evil Empire', sans-serif" : selectedFont, // Use the selected font
                    originX: 'center', // Center the text horizontally
                    originY: 'bottom', // Align the text to the bottom
                    textAlign: 'center', // Center the text
                    lockMovementX: true, // Prevent horizontal movement
                    lockMovementY: true, // Prevent vertical movement
                    lockRotation: true, // Prevent rotation
                    lockScalingX: true, // Prevent horizontal scaling
                    lockScalingY: true, // Prevent vertical scaling
                    hasControls: false, // Hide controls
                    hasBorders: false, // Hide borders
                    selectable: false // Make it non-selectable
                });

                canvas.add(text);
            }
        });

        // Handle Font Selection from <select> Dropdown
        $('#font-select').change(function () {
            const selectedFont = $(this).val();
            const textInput = $('#text-input').val();

            if (textInput) {
                // Remove existing text
                const existingText = canvas.getObjects().find(obj => obj.type === 'textbox');
                if (existingText) {
                    canvas.remove(existingText);
                }

                // Add new text with updated font
                const text = new fabric.Textbox(textInput, {
                    left: canvas.getWidth() / 2,
                    top: canvas.getHeight() - 70,
                    fontSize: 34,
                    fill: 'silver',
                    fontFamily: selectedFont === 'Evil Empire' ? "'Evil Empire', sans-serif" : selectedFont,
                    originX: 'center',
                    originY: 'bottom',
                    textAlign: 'center',
                    lockMovementX: true,
                    lockMovementY: true,
                    lockRotation: true,
                    lockScalingX: true,
                    lockScalingY: true,
                    hasControls: false,
                    hasBorders: false,
                    selectable: false
                });

                canvas.add(text);
            }
        });

        // Make Order Button Click Handler
        $('#make-order').click(function () {
            const sizeId = $('#size-select').val();
            const colorId = $('input[name="ColorId"]:checked').val();
            const lidId = $('input[name="LidId"]:checked').val();
            const text = $('#text-input').val();
            const fontFamily = $('#font-select').val();

            // Validate if size, color, and lid are selected
            if (!sizeId || !colorId || !lidId) {
                const selectedLanguage = '@SelectedLanguage';
                const message = selectedLanguage === 'ar' ? 'الرجاء تحديد الحجم واللون والغطاء!' : 'Please select size, color, and lid!';
                const confirmButtonText = selectedLanguage === 'ar' ? 'حسناً' : 'OK';

                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: message,
                    confirmButtonText: confirmButtonText
                });
                return;
            }

            // Prepare the order details object
            const orderDetails = {
                SizeId: sizeId,
                ColorId: colorId,
                LidId: lidId,
                IsCustomize: text ? true : false,
                Text: text,
                FontFamily: fontFamily
            };

            // Send the order details to the server
            $.ajax({
                url: '/Home/OrderRequest',
                type: 'POST',
                data: orderDetails,
                success: function (response) {
                    if (response.success) {
                        // Redirect to the Order action in the Home controller
                        window.location.href = `@Url.Action("order", "Home")?Details=OrderDetails`;
                    } else {
                        const selectedLanguage = '@SelectedLanguage';
                        const message = selectedLanguage === 'ar' ? 'فشل في تقديم الطلب!' : 'Failed to submit the order!';
                        const confirmButtonText = selectedLanguage === 'ar' ? 'حسناً' : 'OK';

                        Swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            text: message,
                            confirmButtonText: confirmButtonText
                        });
                    }
                },
                error: function (xhr, status, error) {
                    const selectedLanguage = '@SelectedLanguage';
                    const message = selectedLanguage === 'ar' ? 'فشل في تقديم الطلب!' : 'Failed to submit the order!';
                    const confirmButtonText = selectedLanguage === 'ar' ? 'حسناً' : 'OK';

                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: message,
                        confirmButtonText: confirmButtonText
                    });
                }
            });
        });

        // Handle click on color circles
        $('.color-circle').on('click', function () {
            if ($(this).hasClass('sold-out')) {
                const selectedLanguage = '@SelectedLanguage';
                const message = selectedLanguage === 'ar' ? 'هذا اللون غير متوفر!' : 'This color is sold out!';
                const confirmButtonText = selectedLanguage === 'ar' ? 'حسناً' : 'OK';

                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: message,
                    confirmButtonText: confirmButtonText
                });
            } else {
                $('.color-circle').removeClass('selected');
                $(this).addClass('selected');
                updateBottleImage();
            }
        });

        // Handle click on lid cards
        $('.lid-card').on('click', function () {
            $('.lid-card').removeClass('selected');
            $(this).addClass('selected');
            updateBottleImage();
        });

        // Click event for the front image box
        $('.front-image-box').on('click', function () {
            const frontImageUrl = $('#front-image').attr('src'); // Get the image URL
            if (frontImageUrl) {
                // Use SweetAlert2 to display the image in a popup
                Swal.fire({
                    imageUrl: frontImageUrl,
                    imageAlt: 'Front Image',
                    showCloseButton: true,
                    showConfirmButton: false,
                    width: '70%',
                    backdrop: true,
                });
            } else {
                const selectedLanguage = '@SelectedLanguage';
                const message = selectedLanguage === 'ar' ? 'لا توجد صورة لعرضها!' : 'No image to display!';
                const confirmButtonText = selectedLanguage === 'ar' ? 'حسناً' : 'OK';

                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: message,
                    confirmButtonText: confirmButtonText
                });
            }
        });

        // Show front image on mobile when button is clicked
        $('#show-front-image').click(function () {
            const frontImageUrl = $('#front-image').attr('src'); // Get the image URL
            if (frontImageUrl) {
                // Use SweetAlert2 to display the image in a popup
                Swal.fire({
                    imageUrl: frontImageUrl,
                    imageAlt: 'Front Image',
                    showCloseButton: true,
                    showConfirmButton: false,
                    width: '70%',
                    backdrop: true,
                });
            } else {
                const selectedLanguage = '@SelectedLanguage';
                const message = selectedLanguage === 'ar' ? 'لا توجد صورة لعرضها!' : 'No image to display!';
                const confirmButtonText = selectedLanguage === 'ar' ? 'حسناً' : 'OK';

                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: message,
                    confirmButtonText: confirmButtonText
                });
            }
        });
    });

    // Resize Canvas on Window Resize
    function resizeCanvas() {
        const canvas = document.getElementById('design-canvas');
        const container = canvas.parentElement;

        // Set canvas dimensions to match the container
        canvas.width = container.clientWidth;
        canvas.height = container.clientHeight;
    }

    // Resize canvas on window resize
    window.addEventListener('resize', resizeCanvas);

    // Initial resize
    resizeCanvas();
</script>